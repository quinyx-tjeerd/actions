name: "Build image"
description: "Docker image build and publish"
inputs:
  backend_iam_role:
    description: Name of the Terraform backend assumable IAM Role
    default: "github-actions_terraform-backend"
  aws_account_id:
    description: AWS Account ID
  aws_region:
    description: Target AWS Region
    default: "eu-central-1"
  q_service:
    description: Quinyx Service, like 'qwfmbackend' or 'security'
runs:
  using: "composite"
  steps:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: TF init
      shell: bash
      run: |
        set -eux
        terraform init -upgrade -reconfigure \
          -backend-config='skip_metadata_api_check=true' \
          -backend-config='skip_region_validation=true' \
          -backend-config='skip_credentials_validation=true' \
          -backend-config='region=${{ inputs.aws_region }}' \
          -backend-config='bucket=quinyx-terraform-state-${{ inputs.aws_region }}' \
          -backend-config='key=automated/${{ inputs.aws_service }}/${{ inputs.q_service }}/terraform.tfstate' \
          -backend-config='dynamodb_table=quinyx-terraform-locks-${{ inputs.aws_region }}' \
          -backend-config='role_arn=arn:aws:iam::${{ inputs.aws_account_id }}:role/${{ inputs.backend_iam_role }}'
      working-directory: ${{ github.action_path }}

    - name: TF apply
      shell: bash
      run: |
        set -eux
        terraform apply \
          -var 'aws_account_id=${{ inputs.aws_account_id }}' \
          -auto-approve
      working-directory: ${{ github.action_path }}
