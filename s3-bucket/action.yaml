name: "Manage S3 Bucket"
description: "Create and manage a bucket using terraform"
inputs:
  aws_account_id:
    description: AWS Account ID
    default: "488021763009"
  aws_region:
    description: Target AWS Region
    default: "eu-central-1"
  github_iam_role_arn:
    description: Name of the IAM Role for managing the S3 Bucket, also needs to assume the terraform role
    default: "arn:aws:iam::488021763009:role/github-actions_s3-bucket"
  q_service:
    description: Quinyx Service, like 'qwfmbackend' or 'security'
  tags:
    description: Tags to add to the bucket
  environment:
    description: Environment
  component:
    description: Component of service, like a sub division
    default: ""
  description:
    description: description of the bucket
    default: ""
  custom_name:
    description: custom name for the bucket
    default: ""
  versioning:
    description: Enable object versioning
    default: "true"
  kms_key_arn:
    description: Use KMS encryption with specified key
    default: ""
  lifecycle_rules:
    description: Lifecycle rules, list of objects [ {rule} ]
    default: "[]"
  allowed_users:
    description: List of IAM users, conflicts with 'cloudfront_distribution_arns'
    default: "[]"
  allowed_groups:
    description: List of IAM groups, conflicts with 'cloudfront_distribution_arns'
    default: "[]"
  allowed_roles:
    description: List of IAM roles, conflicts with 'cloudfront_distribution_arns'
    default: "[]"
  cloudfront_enabled:
    description: Creates Cloudfront Origin Access Control, if true, which will be used by cloudfront to access this bucket
    default: "false"
  cloudfront_distribution_arns:
    description: Cloudfront distribution ARNs that use this bucket as their origin, conflicts with and takes precendence over 'allows_(groups|roles|users)'
    default: "[]"
outputs:
  json:
    description: "Terraform output as JSON"
    value: ${{ steps.terraform.outputs.json }}
  bucket_arn:
    description: "S3 Bucket ARN"
    value: ${{ steps.terraform.outputs.json && fromJSON(steps.terraform.outputs.json).bucket_arn }}
  bucket_id:
    description: "S3 Bucket ID"
    value: ${{ steps.terraform.outputs.json && fromJSON(steps.terraform.outputs.json).bucket_id }}
runs:
  using: "composite"
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.github_iam_role_arn }}
        aws-region: ${{ inputs.aws_region }}

    - id: terraform
      name: Manage S3 bucket
      uses: quinyx-tjeerd/actions/terraform-automated@main
      env:
        TF_VAR_aws_account_id: ${{ inputs.aws_account_id }}
        TF_VAR_region: ${{ inputs.aws_region }}
        TF_VAR_service: ${{ inputs.q_service }}
        TF_VAR_environment: ${{ inputs.environment }}
        TF_VAR_tags: ${{ inputs.tags }}
        TF_VAR_component: ${{ inputs.component }}
        TF_VAR_description: ${{ inputs.description }}
        TF_VAR_custom_name: ${{ inputs.custom_name }}
        TF_VAR_versioning: ${{ inputs.versioning == 'true' }}
        TF_VAR_lifecycle_rules: ${{ inputs.lifecycle_rules }}
        TF_VAR_allowed_users: ${{ inputs.allowed_users }}
        TF_VAR_allowed_groups: ${{ inputs.allowed_groups }}
        TF_VAR_allowed_roles: ${{ inputs.allowed_roles }}
        TF_VAR_cloudfront_origin_access_control: ${{ inputs.cloudfront_enabled == 'true' }}
        TF_VAR_cloudfront_distribution_arns: ${{ inputs.cloudfront_distribution_arns }}
      with:
        aws_region: ${{ inputs.aws_region }}
        aws_service: S3
        tf_state_prefix: ${{ format( '{0}{1}', inputs.q_service, (inputs.component != '' && format('/{0}', inputs.component) || '')) }}
        working-directory: ${{ github.action_path }}
