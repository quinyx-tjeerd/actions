name: "Build image"
description: "Docker image build and publish"
inputs:
  aws_account_id:
    description: AWS Account ID
    default: "488021763009"
  aws_region:
    description: Target AWS Region
    default: "eu-central-1"
  github_iam_role_arn:
    description: Name of the IAM Role for managing the API Gateway, also needs to assume the terraform role
    default: "arn:aws:iam::488021763009:role/github-actions_api-gateway"
  q_service:
    description: Quinyx Service, like 'qwfmbackend' or 'security'
  tags:
    description: Tags to add to the function
  environment:
    description: Environment
  description:
    description: description of the function
    default: ""
  stages:
    description: List of stages to create
    default: '[{"name"="test"},{"name"="staging"},{"name"="rc"},{"name"="prod"}]'
  resources:
    description: List of resources, must contain path
  default_resource:
    description: Default object which the specified resources are applied upon
    default: '{"timeout_milliseconds": 300}'
  custom_domain_name:
    description: In case you don't want the default 'service'-'region'.lambda.quinyx.io
    default: ""
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.github_iam_role_arn }}
        aws-region: ${{ inputs.aws_region }}

    - name: Manage API-Gateway Function
      uses: quinyx-tjeerd/actions/terraform-automated@main
      env:
        TF_VAR_region: ${{ inputs.aws_region }}
        TF_VAR_environment: ${{ inputs.environment }}
        TF_VAR_service: ${{ inputs.q_service }}
        TF_VAR_tags: ${{ inputs.tags }}
        TF_VAR_description: ${{ inputs.description }}
        TF_VAR_stages: ${{ inputs.stages }}
        TF_VAR_resources: ${{ inputs.resources }}
        TF_VAR_default_resource: ${{ inputs.default_resource }}
        TF_VAR_custom_domain_name: ${{ inputs.custom_domain_name }}
      with:
        aws_region: ${{ inputs.aws_region }}
        aws_service: API-Gateway
        tf_state_prefix: ${{ inputs.q_service }}
        working-directory: ${{ github.action_path }}
